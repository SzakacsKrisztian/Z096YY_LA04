from abc import ABC, abstractmethod

class Jarat(ABC):
    def __init__(self, jaratszam, celallomas, jegyar, legitarsasag):
        self.jaratszam = jaratszam
        self.celallomas = celallomas
        self.jegyar = jegyar
        self.legitarsasag = legitarsasag

    @abstractmethod
    def jarat_tipus(self):
        pass

class BelfoldiJarat(Jarat):
    def __init__(self, jaratszam, celallomas, legitarsasag):
        super().__init__(jaratszam, celallomas, 10000, legitarsasag)

    def jarat_tipus(self):
        return "Belföldi"

class NemzetkoziJarat(Jarat):
    def __init__(self, jaratszam, celallomas, legitarsasag):
        super().__init__(jaratszam, celallomas, 40000, legitarsasag)

    def jarat_tipus(self):
        return "Nemzetközi"

class JegyFoglalas:
    def __init__(self, utas_nev, jarat):
        self.utas_nev = utas_nev
        self.jarat = jarat

    def __str__(self):
        return f"{self.utas_nev} - {self.jarat.legitarsasag} | {self.jarat.jaratszam} ({self.jarat.celallomas}) - {self.jarat.jarat_tipus()} - {self.jarat.jegyar} Ft"

class LegiTarsasag:
    def __init__(self, nev):
        self.nev = nev
        self.jaratok = []

    def jarat_hozzaadas(self, jarat):
        self.jaratok.append(jarat)

    def get_jarat(self, jaratszam):
        for j in self.jaratok:
            if j.jaratszam == jaratszam:
                return j
        return None

def elore_betoltott_adatok():
    legitarsasag = LegiTarsasag("AirPython")

    j1 = BelfoldiJarat("WZ101", "Debrecen", "Wizz Air")
    j2 = NemzetkoziJarat("RY202", "London", "Ryanair")
    j3 = NemzetkoziJarat("LH203", "Berlin", "Lufthansa")

    legitarsasag.jarat_hozzaadas(j1)
    legitarsasag.jarat_hozzaadas(j2)
    legitarsasag.jarat_hozzaadas(j3)

    foglalasok = [
        JegyFoglalas("Kiss Anna", j1),
        JegyFoglalas("Szabo Bela", j2),
        JegyFoglalas("Nagy Petra", j3),
        JegyFoglalas("Kovacs Daniel", j1),
        JegyFoglalas("Toth Luca", j2),
        JegyFoglalas("Horvath Mate", j3),
    ]

    return legitarsasag, foglalasok

def main():
    legitarsasag, foglalasok = elore_betoltott_adatok()

    while True:
        print("\n--- Repülőjegy Foglalási Rendszer ---")
        print("1. Jegy foglalása")
        print("2. Foglalás lemondása")
        print("3. Foglalások listázása")
        print("0. Kilépés")
        valasz = input("Választás: ")

        if valasz == "1":
            nev = input("Utas neve: ")
            jaratszam = input("Járatszám: ").strip()
            jarat = legitarsasag.get_jarat(jaratszam)
            if jarat:
                # Ellenőrzés, hogy már létezik-e ilyen foglalás
                if any(f.utas_nev == nev and f.jarat.jaratszam == jaratszam for f in foglalasok):
                    print("Ez a foglalás már létezik.")
                else:
                    foglalas = JegyFoglalas(nev, jarat)
                    foglalasok.append(foglalas)
                    print(f"Foglalás megtörtént! Ár: {jarat.jegyar} Ft")
            else:
                print("Hiba: nincs ilyen járat.")
        elif valasz == "2":
            nev = input("Utas neve: ")
            jaratszam = input("Járatszám: ").strip()
            talalat = None
            for f in foglalasok:
                if f.utas_nev == nev and f.jarat.jaratszam == jaratszam:
                    talalat = f
                    break
            if talalat:
                foglalasok.remove(talalat)
                print("Foglalás törölve.")
            else:
                print("Nem található ilyen foglalás.")
        elif valasz == "3":
            print("\nAktuális foglalások:")
            if not foglalasok:
                print("Nincsenek foglalások.")
            else:
                for f in foglalasok:
                    print(f)
        elif valasz == "0":
            print("Kilépés a rendszerből...")
            break
        else:
            print("Érvénytelen opció, próbáld újra.")

if __name__ == "__main__":
    main()
